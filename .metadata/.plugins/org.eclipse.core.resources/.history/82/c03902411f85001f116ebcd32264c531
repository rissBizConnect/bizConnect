package org.riss.bizconnect.hr.retire.model.controller;

import java.util.List;

import org.riss.bizconnect.hr.retire.model.dto.Retire;
import org.riss.bizconnect.hr.retire.model.service.RetireService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class RetireController {

    private static final Logger logger = LoggerFactory.getLogger(RetireController.class);
    
    @Autowired
    private RetireService retireService;

    
    @RequestMapping("list.do") // 목록 조회 경로
    public ModelAndView getRetireeList(ModelAndView mv) {
        List<Retire> retireeList = retireService.selectAllRetirees();
        
        if (retireeList != null) {
            mv.addObject("retireeList", retireeList);
            mv.setViewName("retireeList"); // 반환할 JSP 파일명
        } else {
            mv.addObject("message", "퇴직자 목록 조회 실패!");
            mv.setViewName("common/error");
        }

        return mv;
    }

 // 퇴직자 추가 페이지로 이동 (GET)
    @RequestMapping("add.do") // 퇴직자 추가 페이지 경로
    public ModelAndView addRetireeForm() {
        ModelAndView mv = new ModelAndView("retireadd"); // 반환할 JSP 파일명
        return mv;
    }

    // 퇴직자 추가 처리 (POST)
    @RequestMapping(value = "add.do", method = RequestMethod.POST) // POST 방식으로 추가
    public ModelAndView insertRetiree(Retire retiree) {
        retireService.insertRetiree(retiree);
        return new ModelAndView("redirect:/retiree/list.do"); // 추가 후 목록으로 리다이렉트
    }

    // 퇴직자 수정 페이지로 이동 (GET)
    @RequestMapping(value = "edit.do", method = RequestMethod.GET) // 퇴직자 수정 페이지 경로
    public ModelAndView editRetireeForm(@RequestParam("retire_no") int retireId) {
        ModelAndView mv = new ModelAndView();
        Retire retiree = retireService.selectAllRetirees().stream()
                              .filter(r -> r.getRetire_no() == retireId)
                              .findFirst()
                              .orElse(null);
        mv.addObject("retiree", retiree);
        mv.setViewName("retireeEdit"); // 반환할 JSP 파일명
        return mv;
    }

    // 퇴직자 수정 처리 (POST)
    @RequestMapping(value = "edit.do", method = RequestMethod.POST) // POST 방식으로 수정
    public ModelAndView updateRetiree(Retire retiree) {
        retireService.updateRetiree(retiree);
        return new ModelAndView("redirect:/retiree/list.do"); // 수정 후 목록으로 리다이렉트
    }

    // 퇴직자 삭제 (POST)
    @RequestMapping(value = "delete.do", method = RequestMethod.POST) // POST 방식으로 삭제
    public ModelAndView deleteRetiree(
    		@RequestParam("id") int retireId) {
        retireService.deleteRetiree(retireId);
        return new ModelAndView("redirect:/retiree/list.do"); // 삭제 후 목록으로 리다이렉트
    }
}