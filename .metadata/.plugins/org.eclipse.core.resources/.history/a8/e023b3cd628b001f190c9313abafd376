package org.riss.bizconnect.hr.document.model.controller;

import java.util.List;

import org.riss.bizconnect.hr.document.model.dto.Certificate;
import org.riss.bizconnect.hr.document.model.service.CertificateService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class CertificateController {
    
    @Autowired
    private CertificateService certificateService; // 서비스 주입
    
    // 증명서 목록 조회
    @GetMapping("cerList")
    public String selectCertificates(Model model) {
        List<Certificate> certificateList = certificateService.selectCertificates();
        model.addAttribute("certificateList", certificateList);
        return "certificateList"; // JSP 페이지 이름
    }

    // 파일 업로드 처리
    @PostMapping("cerUpload.do")
    public String uploadFile(@RequestParam("file") MultipartFile file,
                             @RequestParam("contractId") String contractId,
                             @RequestParam("title") String title,
                             @RequestParam("description") String description) {
        String filePath = "resources/certificate_files/";
        String fileName = file.getOriginalFilename();

        // 파일 저장 로직
        try {
            File destinationFile = new File(filePath + fileName);
            file.transferTo(destinationFile);

            // 파일 정보 DB에 저장
            certificateService.saveCertificate(contractId, title, description, fileName);
        } catch (IOException e) {
            e.printStackTrace();
            // 에러 처리 로직 추가 필요
        }
        return "redirect:/hr/certificateList"; // 업로드 후 목록 페이지로 리다이렉트
    }

    // 증명서 상세보기 메서드
    @GetMapping("cerView/{contractId}")
    public String viewCertificate(@PathVariable String contractId, Model model) {
        Certificate certificate = certificateService.selcetListCertificateById(contractId);
        model.addAttribute("certificate", certificate);
        return "/hr/certificateDetail"; // 상세보기 JSP 페이지 이름
    }

    // 증명서 추가
    @PostMapping("cerAdd.do")
    public String insertCertificate(Certificate certificate) {
        certificateService.insertCertificate(certificate);
        return "redirect:/cerList.do";
    }

    // 증명서 수정
    @PostMapping("cerUpdate.do")
    public String updateCertificate(Certificate certificate) {
        certificateService.updateCertificate(certificate);
        return "redirect:/cerList.do";
    }

    // 증명서 삭제
    @PostMapping("cerDelete.do")
    public String deleteCertificate(@PathVariable int contractId) {
        certificateService.deleteCertificate(contractId);
        return "redirect:/cerList.do";
    }
}
